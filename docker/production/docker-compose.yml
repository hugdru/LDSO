version: '2'

networks:
  app-network:
    driver: bridge

services:
  nginx:
    image: prod/nginx
    container_name: nginx
    environment:
      - BUILD=prod
    depends_on:
      - go1
      - gon
    ports:
      - "80:80"
      - "443:443"
    entrypoint:
      - dockerize
      - -template
      - /etc/nginx/nginx.tmpl:/etc/nginx/nginx.conf
      - -wait
      - tcp://go1:8080
      - -wait
      - tcp://gon:8080
      - -timeout
      - 60s
      - nginx
      - -g
      - daemon off;
    networks:
      - app-network
    restart: always
  go1:
    image: prod/golang
    container_name: go1
    environment:
      - BUILD=prod
    depends_on:
      - postgres
    networks:
      - app-network
    restart: always
  gon:
    image: prod/golang
    container_name: gon
    environment:
      - BUILD=prod
    depends_on:
      - postgres
    networks:
      - app-network
    restart: always
  postgres:
    image: prod/postgres
    container_name: postgres
    environment:
      - BUILD=prod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=places4all
    networks:
      - app-network
    restart: always
