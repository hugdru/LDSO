version: '2'

networks:
  app-network:
    driver: bridge

services:
  nginx:
    image: dev/nginx
    container_name: nginx
    environment:
      - BUILD=dev
    depends_on:
      - go1
      - gon
    volumes:
      - ../../frontend:/server/frontend
    ports:
      - "80:80"
      - "443:443"
      - "4200:4200"
    entrypoint:
      - dockerize
      - -template
      - /etc/nginx/nginx.tmpl:/etc/nginx/nginx.conf
      - -wait
      - tcp://go1:8080
      - -wait
      - tcp://gon:8080
      - -timeout
      - 60s
      - entrypoint.sh
    networks:
      app-network:
        aliases:
          - api.lp4adev.tk
          - www.lp4adev.tk
          - lp4adev.tk
    restart: always
  go1:
    image: dev/golang
    container_name: go1
    environment:
      - BUILD=dev
    depends_on:
      - postgres
      - redis
    volumes:
      - ../../backend:/server/backend
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: always
  gon:
    image: dev/golang
    container_name: gon
    environment:
      - BUILD=dev
    depends_on:
      - postgres
      - redis
    volumes:
      - ../../backend:/server/backend
    ports:
      - "8089:8080"
    networks:
      - app-network
    restart: always
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - BUILD=dev
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=places4all
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - BUILD=dev
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always
